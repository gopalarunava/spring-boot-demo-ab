package com.ab.springboot.moviecatalogservice.resources;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.reactive.function.client.WebClient;

import com.ab.springboot.moviecatalogservice.model.CatalogItems;
import com.ab.springboot.moviecatalogservice.model.Movie;
import com.ab.springboot.moviecatalogservice.model.Rating;
import com.ab.springboot.moviecatalogservice.model.UserRating;

@RestController
@RequestMapping("/catalog")
public class MovieCatalogResource 
{
	@Autowired
	private RestTemplate restTemplate ;
	
	@Autowired
	private WebClient.Builder webClientBuilder;
	
	@RequestMapping("/{userId}")
	public List<CatalogItems> getCatalog(@PathVariable("userId")String userId)
	{
		// get all related movie IDs
		
		
		
		UserRating ratings = restTemplate.getForObject("http://ratings-data-service/ratingsdata/users/" + userId, UserRating.class);
		return ratings.getUserRating().stream().map(rating -> {
			Movie movie = restTemplate.getForObject("http://localhost:8082/movies/"+ rating.getMovieId(), Movie.class);
			
			/*
			 * Movie movie = webClientBuilder.build().get()
			 * .uri("http://localhost:8082/movies/"+ rating.getMovieId()) .retrieve()
			 * .bodyToMono(Movie.class) .block();
			 */ 
			
			return new CatalogItems(movie.getName(), "Test", rating.getRating());
		})
		.collect(Collectors.toList());
		// for each movie ID, call movie info service and get details.

		// Put them all together
		// return Collections.singletonList(new CatalogItems("Transformers", "Test", 4));
	}

}
